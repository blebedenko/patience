library(tictoc)
library(tidyverse)
library(simsalapar)
library(parallel)
library(filenamer)
library(patience)
library(pbapply)
library(doSNOW)
# Average likelihood - make tables with the negative log likelihood ----
setwd("~/patience/average_likelihood/gamma = 40 lambda = 10 theta = 1.5/realizations for s=20")
nservers <- 20
## compute the gridfrom parameters in make_queue_data
spans <-  c(0.99,0.99,0.5)
grid.sizes <- c(36,36,9)
grid <- makeParGrid(params = PARAMS,spans = spans,grid.sizes = grid.sizes)
## compute the likelihood for that grid ----
L <- pblapply(dir(),read.csv)
cl <- makeCluster(detectCores()-1)
registerDoSNOW(cl)
iterations <-  nrow(grid)
pb <- txtProgressBar(max = iterations, style = 2)
progress <- function(n) setTxtProgressBar(pb, n)
opts <- list(progress = progress)
tic()
ans <- foreach(i = 1:iterations,.combine = cbind,.packages = "patience") %dopar% {
negLL <- meanLogLikelihoodFromList(gamma = grid$gamma[i], lambda_0 = grid$lambda_0[i] ,theta = grid$theta[i],res_list = L)
c(gamma = grid$gamma[i], lambda_0 = grid$lambda_0[i] ,theta = grid$theta[i], negLogLik = negLL)
}
toc()
close(pb)
stopCluster(cl)
ans <- t(ans)
## write the results
tit <- paste0("big grid results for s=",nservers,".csv")
write.csv(ans,tit,row.names = FALSE)
rm(L)
rm(ans)
eta <- 1
mu <- 1
# EB (Job size epxectation)eta/mu
n <- 10000
gamma <- 40 # bigger periodic input
lambda_0 <- 10
theta <- 2.5
PARAMS <-c(gamma=gamma,lambda_0=lambda_0,theta=theta)
setwd("~/patience/average_likelihood/gamma = 40 lambda = 10 theta = 1.5/realizations for s=20")
nservers <- 20
## compute the gridfrom parameters in make_queue_data
spans <-  c(0.99,0.99,0.5)
grid.sizes <- c(36,36,9)
grid <- makeParGrid(params = PARAMS,spans = spans,grid.sizes = grid.sizes)
## compute the likelihood for that grid ----
L <- pblapply(dir(),read.csv)
cl <- makeCluster(detectCores()-1)
registerDoSNOW(cl)
iterations <-  nrow(grid)
pb <- txtProgressBar(max = iterations, style = 2)
progress <- function(n) setTxtProgressBar(pb, n)
opts <- list(progress = progress)
tic()
ans <- foreach(i = 1:iterations,.combine = cbind,.packages = "patience") %dopar% {
negLL <- meanLogLikelihoodFromList(gamma = grid$gamma[i], lambda_0 = grid$lambda_0[i] ,theta = grid$theta[i],res_list = L)
c(gamma = grid$gamma[i], lambda_0 = grid$lambda_0[i] ,theta = grid$theta[i], negLogLik = negLL)
}
toc()
close(pb)
stopCluster(cl)
ans <- t(ans)
## write the results
tit <- paste0("big grid results for s=",nservers,".csv")
write.csv(ans,tit,row.names = FALSE)
rm(L)
rm(ans)
shiny::runApp('~/patience/average_likelihood/code/likelihood_surfaces_app')
dir()
setwd("~/patience/average_likelihood/code/likelihood_surfaces_app")
dir()
runApp()
runApp()
runApp()
runApp()
runApp()
